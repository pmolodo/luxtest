[MAIN]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Files or directories to be skipped. They should be base names, not
# paths.
ignore=.DS_Store,
       .conan,
       .git,
       .hg,
       .mypy_cache,
       .vs,
       .vscode,
       __pycache__,
       CVS,

# Add files or directories matching the regex patterns to the ignore-list. The
# regex matches against paths and can be in Posix or Windows format.
ignore-paths=^\.tox/.*$,
             ^\.venv/.*$
             ^\_venv/.*$


[MESSAGES CONTROL]

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once). You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use "--disable=all --enable=classes
# --disable=W".
disable=import-outside-toplevel,
        missing-class-docstring,
        missing-function-docstring,
        subprocess-run-check,
        wrong-import-position,
        # Until VSCode linting respects the .env file (or has some other way to add paths), "can't import" errors
        # are useless:
        #    https://github.com/microsoft/vscode-python/issues/9185
        import-error

[FORMAT]

# Maximum number of characters on a single line.
max-line-length=120

[TYPECHECK]
# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=winreg